plugins {
	id 'application'
	id 'java'
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.4'
	id "de.undercouch.download" version "5.3.0"
}
application {
	mainClass = 'mahi.labs.monkeystore.MonkeystoreApplication'
}

group = 'com.javalabs'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = JavaVersion.VERSION_17
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	runtimeOnly 'com.mysql:mysql-connector-j'
	implementation 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'com.google.http-client:google-http-client:1.42.0'
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	implementation 'com.google.firebase:firebase-admin:9.2.0'
	implementation 'org.projectlombok:lombok:1.18.30'
	annotationProcessor 'org.projectlombok:lombok:1.18.30'
	implementation 'io.springfox:springfox-swagger'
    	implementation 'io.springfox:springfox-swagger-ui'

	implementation 'org.springframework.boot:spring-boot-starter-security'
}



tasks.named('test') {
	useJUnitPlatform()
}

task downloadNewrelic(type: Download) {
	mkdir 'newrelic'
	src 'https://download.newrelic.com/newrelic/java-agent/newrelic-agent/current/newrelic-java.zip'
	dest file('newrelic')
}

task unzipNewrelic(type: Copy) {
	from zipTree(file('newrelic/newrelic-java.zip'))
	into rootDir
}
